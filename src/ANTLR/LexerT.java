package ANTLR;

// Generated from LexerT.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LexerT extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BEGIN=1, END=2, OUTPUT=3, INPUT=4, IF=5, ELSE=6, DO=7, WHILE=8, FOR=9, 
		VARNAME=10, CHAR=11, INT=12, FLOAT=13, COSENO=14, SENO=15, MAT_SIMBOLS=16, 
		SUMAR=17, RESTAR=18, MULT=19, DIV=20, POW=21, MAYOR=22, MENOR=23, IGUAL=24, 
		DISTINTO=25, OR=26, AND=27, PICHU=28, MEW=29, MEWTWO=30, NUMBER=31, WS=32;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"BEGIN", "END", "OUTPUT", "INPUT", "IF", "ELSE", "DO", "WHILE", "FOR", 
		"VARNAME", "CHAR", "INT", "FLOAT", "COSENO", "SENO", "MAT_SIMBOLS", "SUMAR", 
		"RESTAR", "MULT", "DIV", "POW", "MAYOR", "MENOR", "IGUAL", "DISTINTO", 
		"OR", "AND", "PICHU", "MEW", "MEWTWO", "NUMBER", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'empezar combate'", "'combate finalizado'", "'yo te elijo'", "'mote'", 
		"'si'", "'sino'", "'hacer'", "'mientras'", "'para'", null, null, null, 
		null, "'cosmog'", "'sentret'", null, "' es curado por '", "' es atacado por '", 
		"' junto con '", "' debilita '", "' potencia '", null, null, null, null, 
		"'o'", "'y'", "'3,14159'", "'inf'", "'-inf'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "BEGIN", "END", "OUTPUT", "INPUT", "IF", "ELSE", "DO", "WHILE", 
		"FOR", "VARNAME", "CHAR", "INT", "FLOAT", "COSENO", "SENO", "MAT_SIMBOLS", 
		"SUMAR", "RESTAR", "MULT", "DIV", "POW", "MAYOR", "MENOR", "IGUAL", "DISTINTO", 
		"OR", "AND", "PICHU", "MEW", "MEWTWO", "NUMBER", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LexerT(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LexerT.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\"\u01a9\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3"+
		"\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\6\13\u0095\n\13\r\13"+
		"\16\13\u0096\3\f\3\f\7\f\u009b\n\f\f\f\16\f\u009e\13\f\3\f\3\f\3\r\5\r"+
		"\u00a3\n\r\3\r\6\r\u00a6\n\r\r\r\16\r\u00a7\3\16\6\16\u00ab\n\16\r\16"+
		"\16\16\u00ac\3\16\3\16\6\16\u00b1\n\16\r\16\16\16\u00b2\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\5\21\u00c9\n\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\5\27"+
		"\u0118\n\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\5\30\u0135\n\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\5\31\u0156\n\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u0173\n\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \6 \u019f\n"+
		" \r \16 \u01a0\3!\6!\u01a4\n!\r!\16!\u01a5\3!\3!\3\u009c\2\"\3\3\5\4\7"+
		"\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"\3"+
		"\2\5\3\2c|\3\2\62;\5\2\13\f\17\17\"\"\2\u01b8\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\3C\3\2\2\2\5S\3\2\2\2\7f\3\2\2\2\tr\3\2\2\2\13w\3\2\2"+
		"\2\rz\3\2\2\2\17\177\3\2\2\2\21\u0085\3\2\2\2\23\u008e\3\2\2\2\25\u0094"+
		"\3\2\2\2\27\u0098\3\2\2\2\31\u00a2\3\2\2\2\33\u00aa\3\2\2\2\35\u00b4\3"+
		"\2\2\2\37\u00bb\3\2\2\2!\u00c8\3\2\2\2#\u00ca\3\2\2\2%\u00da\3\2\2\2\'"+
		"\u00eb\3\2\2\2)\u00f7\3\2\2\2+\u0102\3\2\2\2-\u0117\3\2\2\2/\u0134\3\2"+
		"\2\2\61\u0155\3\2\2\2\63\u0172\3\2\2\2\65\u0188\3\2\2\2\67\u018a\3\2\2"+
		"\29\u018c\3\2\2\2;\u0194\3\2\2\2=\u0198\3\2\2\2?\u019e\3\2\2\2A\u01a3"+
		"\3\2\2\2CD\7g\2\2DE\7o\2\2EF\7r\2\2FG\7g\2\2GH\7|\2\2HI\7c\2\2IJ\7t\2"+
		"\2JK\7\"\2\2KL\7e\2\2LM\7q\2\2MN\7o\2\2NO\7d\2\2OP\7c\2\2PQ\7v\2\2QR\7"+
		"g\2\2R\4\3\2\2\2ST\7e\2\2TU\7q\2\2UV\7o\2\2VW\7d\2\2WX\7c\2\2XY\7v\2\2"+
		"YZ\7g\2\2Z[\7\"\2\2[\\\7h\2\2\\]\7k\2\2]^\7p\2\2^_\7c\2\2_`\7n\2\2`a\7"+
		"k\2\2ab\7|\2\2bc\7c\2\2cd\7f\2\2de\7q\2\2e\6\3\2\2\2fg\7{\2\2gh\7q\2\2"+
		"hi\7\"\2\2ij\7v\2\2jk\7g\2\2kl\7\"\2\2lm\7g\2\2mn\7n\2\2no\7k\2\2op\7"+
		"l\2\2pq\7q\2\2q\b\3\2\2\2rs\7o\2\2st\7q\2\2tu\7v\2\2uv\7g\2\2v\n\3\2\2"+
		"\2wx\7u\2\2xy\7k\2\2y\f\3\2\2\2z{\7u\2\2{|\7k\2\2|}\7p\2\2}~\7q\2\2~\16"+
		"\3\2\2\2\177\u0080\7j\2\2\u0080\u0081\7c\2\2\u0081\u0082\7e\2\2\u0082"+
		"\u0083\7g\2\2\u0083\u0084\7t\2\2\u0084\20\3\2\2\2\u0085\u0086\7o\2\2\u0086"+
		"\u0087\7k\2\2\u0087\u0088\7g\2\2\u0088\u0089\7p\2\2\u0089\u008a\7v\2\2"+
		"\u008a\u008b\7t\2\2\u008b\u008c\7c\2\2\u008c\u008d\7u\2\2\u008d\22\3\2"+
		"\2\2\u008e\u008f\7r\2\2\u008f\u0090\7c\2\2\u0090\u0091\7t\2\2\u0091\u0092"+
		"\7c\2\2\u0092\24\3\2\2\2\u0093\u0095\t\2\2\2\u0094\u0093\3\2\2\2\u0095"+
		"\u0096\3\2\2\2\u0096\u0094\3\2\2\2\u0096\u0097\3\2\2\2\u0097\26\3\2\2"+
		"\2\u0098\u009c\7$\2\2\u0099\u009b\13\2\2\2\u009a\u0099\3\2\2\2\u009b\u009e"+
		"\3\2\2\2\u009c\u009d\3\2\2\2\u009c\u009a\3\2\2\2\u009d\u009f\3\2\2\2\u009e"+
		"\u009c\3\2\2\2\u009f\u00a0\7$\2\2\u00a0\30\3\2\2\2\u00a1\u00a3\7/\2\2"+
		"\u00a2\u00a1\3\2\2\2\u00a2\u00a3\3\2\2\2\u00a3\u00a5\3\2\2\2\u00a4\u00a6"+
		"\t\3\2\2\u00a5\u00a4\3\2\2\2\u00a6\u00a7\3\2\2\2\u00a7\u00a5\3\2\2\2\u00a7"+
		"\u00a8\3\2\2\2\u00a8\32\3\2\2\2\u00a9\u00ab\t\3\2\2\u00aa\u00a9\3\2\2"+
		"\2\u00ab\u00ac\3\2\2\2\u00ac\u00aa\3\2\2\2\u00ac\u00ad\3\2\2\2\u00ad\u00ae"+
		"\3\2\2\2\u00ae\u00b0\7.\2\2\u00af\u00b1\t\3\2\2\u00b0\u00af\3\2\2\2\u00b1"+
		"\u00b2\3\2\2\2\u00b2\u00b0\3\2\2\2\u00b2\u00b3\3\2\2\2\u00b3\34\3\2\2"+
		"\2\u00b4\u00b5\7e\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7\7u\2\2\u00b7\u00b8"+
		"\7o\2\2\u00b8\u00b9\7q\2\2\u00b9\u00ba\7i\2\2\u00ba\36\3\2\2\2\u00bb\u00bc"+
		"\7u\2\2\u00bc\u00bd\7g\2\2\u00bd\u00be\7p\2\2\u00be\u00bf\7v\2\2\u00bf"+
		"\u00c0\7t\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2\7v\2\2\u00c2 \3\2\2\2\u00c3"+
		"\u00c9\5#\22\2\u00c4\u00c9\5%\23\2\u00c5\u00c9\5\'\24\2\u00c6\u00c9\5"+
		")\25\2\u00c7\u00c9\5+\26\2\u00c8\u00c3\3\2\2\2\u00c8\u00c4\3\2\2\2\u00c8"+
		"\u00c5\3\2\2\2\u00c8\u00c6\3\2\2\2\u00c8\u00c7\3\2\2\2\u00c9\"\3\2\2\2"+
		"\u00ca\u00cb\7\"\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7u\2\2\u00cd\u00ce"+
		"\7\"\2\2\u00ce\u00cf\7e\2\2\u00cf\u00d0\7w\2\2\u00d0\u00d1\7t\2\2\u00d1"+
		"\u00d2\7c\2\2\u00d2\u00d3\7f\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7\"\2"+
		"\2\u00d5\u00d6\7r\2\2\u00d6\u00d7\7q\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9"+
		"\7\"\2\2\u00d9$\3\2\2\2\u00da\u00db\7\"\2\2\u00db\u00dc\7g\2\2\u00dc\u00dd"+
		"\7u\2\2\u00dd\u00de\7\"\2\2\u00de\u00df\7c\2\2\u00df\u00e0\7v\2\2\u00e0"+
		"\u00e1\7c\2\2\u00e1\u00e2\7e\2\2\u00e2\u00e3\7c\2\2\u00e3\u00e4\7f\2\2"+
		"\u00e4\u00e5\7q\2\2\u00e5\u00e6\7\"\2\2\u00e6\u00e7\7r\2\2\u00e7\u00e8"+
		"\7q\2\2\u00e8\u00e9\7t\2\2\u00e9\u00ea\7\"\2\2\u00ea&\3\2\2\2\u00eb\u00ec"+
		"\7\"\2\2\u00ec\u00ed\7l\2\2\u00ed\u00ee\7w\2\2\u00ee\u00ef\7p\2\2\u00ef"+
		"\u00f0\7v\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2\7\"\2\2\u00f2\u00f3\7e\2"+
		"\2\u00f3\u00f4\7q\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7\"\2\2\u00f6(\3"+
		"\2\2\2\u00f7\u00f8\7\"\2\2\u00f8\u00f9\7f\2\2\u00f9\u00fa\7g\2\2\u00fa"+
		"\u00fb\7d\2\2\u00fb\u00fc\7k\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe\7k\2\2"+
		"\u00fe\u00ff\7v\2\2\u00ff\u0100\7c\2\2\u0100\u0101\7\"\2\2\u0101*\3\2"+
		"\2\2\u0102\u0103\7\"\2\2\u0103\u0104\7r\2\2\u0104\u0105\7q\2\2\u0105\u0106"+
		"\7v\2\2\u0106\u0107\7g\2\2\u0107\u0108\7p\2\2\u0108\u0109\7e\2\2\u0109"+
		"\u010a\7k\2\2\u010a\u010b\7c\2\2\u010b\u010c\7\"\2\2\u010c,\3\2\2\2\u010d"+
		"\u010e\7g\2\2\u010e\u010f\7u\2\2\u010f\u0110\7\"\2\2\u0110\u0111\7f\2"+
		"\2\u0111\u0118\7g\2\2\u0112\u0113\7v\2\2\u0113\u0114\7g\2\2\u0114\u0115"+
		"\7p\2\2\u0115\u0116\7i\2\2\u0116\u0118\7c\2\2\u0117\u010d\3\2\2\2\u0117"+
		"\u0112\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u011a\7\"\2\2\u011a\u011b\7o"+
		"\2\2\u011b\u011c\7c\2\2\u011c\u011d\7{\2\2\u011d\u011e\7q\2\2\u011e\u011f"+
		"\7t\2\2\u011f\u0120\7\"\2\2\u0120\u0121\7p\2\2\u0121\u0122\7k\2\2\u0122"+
		"\u0123\7x\2\2\u0123\u0124\7g\2\2\u0124\u0125\7n\2\2\u0125\u0126\7\"\2"+
		"\2\u0126\u0127\7s\2\2\u0127\u0128\7w\2\2\u0128\u0129\7g\2\2\u0129.\3\2"+
		"\2\2\u012a\u012b\7g\2\2\u012b\u012c\7u\2\2\u012c\u012d\7\"\2\2\u012d\u012e"+
		"\7f\2\2\u012e\u0135\7g\2\2\u012f\u0130\7v\2\2\u0130\u0131\7g\2\2\u0131"+
		"\u0132\7p\2\2\u0132\u0133\7i\2\2\u0133\u0135\7c\2\2\u0134\u012a\3\2\2"+
		"\2\u0134\u012f\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0137\7\"\2\2\u0137\u0138"+
		"\7o\2\2\u0138\u0139\7g\2\2\u0139\u013a\7p\2\2\u013a\u013b\7q\2\2\u013b"+
		"\u013c\7t\2\2\u013c\u013d\7\"\2\2\u013d\u013e\7p\2\2\u013e\u013f\7k\2"+
		"\2\u013f\u0140\7x\2\2\u0140\u0141\7g\2\2\u0141\u0142\7n\2\2\u0142\u0143"+
		"\7\"\2\2\u0143\u0144\7s\2\2\u0144\u0145\7w\2\2\u0145\u0146\7g\2\2\u0146"+
		"\60\3\2\2\2\u0147\u0148\7g\2\2\u0148\u0149\7u\2\2\u0149\u014a\7\"\2\2"+
		"\u014a\u014b\7f\2\2\u014b\u014c\7g\2\2\u014c\u0156\7n\2\2\u014d\u014e"+
		"\7v\2\2\u014e\u014f\7g\2\2\u014f\u0150\7p\2\2\u0150\u0151\7i\2\2\u0151"+
		"\u0152\7c\2\2\u0152\u0153\7\"\2\2\u0153\u0154\7g\2\2\u0154\u0156\7n\2"+
		"\2\u0155\u0147\3\2\2\2\u0155\u014d\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0158"+
		"\7\"\2\2\u0158\u0159\7o\2\2\u0159\u015a\7k\2\2\u015a\u015b\7u\2\2\u015b"+
		"\u015c\7o\2\2\u015c\u015d\7q\2\2\u015d\u015e\7\"\2\2\u015e\u015f\7p\2"+
		"\2\u015f\u0160\7k\2\2\u0160\u0161\7x\2\2\u0161\u0162\7g\2\2\u0162\u0163"+
		"\7n\2\2\u0163\u0164\7\"\2\2\u0164\u0165\7s\2\2\u0165\u0166\7w\2\2\u0166"+
		"\u0167\7g\2\2\u0167\62\3\2\2\2\u0168\u0169\7g\2\2\u0169\u016a\7u\2\2\u016a"+
		"\u016b\7\"\2\2\u016b\u016c\7f\2\2\u016c\u0173\7g\2\2\u016d\u016e\7v\2"+
		"\2\u016e\u016f\7g\2\2\u016f\u0170\7p\2\2\u0170\u0171\7i\2\2\u0171\u0173"+
		"\7c\2\2\u0172\u0168\3\2\2\2\u0172\u016d\3\2\2\2\u0173\u0174\3\2\2\2\u0174"+
		"\u0175\7\"\2\2\u0175\u0176\7f\2\2\u0176\u0177\7k\2\2\u0177\u0178\7u\2"+
		"\2\u0178\u0179\7v\2\2\u0179\u017a\7k\2\2\u017a\u017b\7p\2\2\u017b\u017c"+
		"\7v\2\2\u017c\u017d\7q\2\2\u017d\u017e\7\"\2\2\u017e\u017f\7p\2\2\u017f"+
		"\u0180\7k\2\2\u0180\u0181\7x\2\2\u0181\u0182\7g\2\2\u0182\u0183\7n\2\2"+
		"\u0183\u0184\7\"\2\2\u0184\u0185\7s\2\2\u0185\u0186\7w\2\2\u0186\u0187"+
		"\7g\2\2\u0187\64\3\2\2\2\u0188\u0189\7q\2\2\u0189\66\3\2\2\2\u018a\u018b"+
		"\7{\2\2\u018b8\3\2\2\2\u018c\u018d\7\65\2\2\u018d\u018e\7.\2\2\u018e\u018f"+
		"\7\63\2\2\u018f\u0190\7\66\2\2\u0190\u0191\7\63\2\2\u0191\u0192\7\67\2"+
		"\2\u0192\u0193\7;\2\2\u0193:\3\2\2\2\u0194\u0195\7k\2\2\u0195\u0196\7"+
		"p\2\2\u0196\u0197\7h\2\2\u0197<\3\2\2\2\u0198\u0199\7/\2\2\u0199\u019a"+
		"\7k\2\2\u019a\u019b\7p\2\2\u019b\u019c\7h\2\2\u019c>\3\2\2\2\u019d\u019f"+
		"\t\3\2\2\u019e\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u019e\3\2\2\2\u01a0"+
		"\u01a1\3\2\2\2\u01a1@\3\2\2\2\u01a2\u01a4\t\4\2\2\u01a3\u01a2\3\2\2\2"+
		"\u01a4\u01a5\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a7"+
		"\3\2\2\2\u01a7\u01a8\b!\2\2\u01a8B\3\2\2\2\20\2\u0096\u009c\u00a2\u00a7"+
		"\u00ac\u00b2\u00c8\u0117\u0134\u0155\u0172\u01a0\u01a5\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}